#! /usr/bin/env python

# Generate mappings between signal numbers and signal names.
# Author: Sudhi Herle <sw at herle.net>
#
# This file is placed in the public domain. Do as you please.
# By placing this in the public domain, I absolve myself of any and
# all liability arising from its usage.

"""
Simple script to turn signal numbers into names and descriptions.
"""

import os, sys, os.path
import subprocess, datetime

Z = os.path.basename(sys.argv[0])

def warn(fmt, *args):
    """warn(print_fmt, args...)

    Print a warning message to stderr.
    """

    global Z

    sfmt = '%s: %s' % (Z, fmt)
    if args:
        sfmt = sfmt % args

    if not sfmt.endswith('\n'):
        sfmt += '\n'

    sys.stdout.flush()
    sys.stderr.write(sfmt)
    sys.stderr.flush()


def die(fmt, *args):
    warn(fmt, *args)
    sys.exit(1)


def readsigs():
    """Run bash -c 'kill -l' and return list of signals and their
    numbers"""

    argv   = ["bash", "-c", "kill -l" ]
    sigstr = subprocess.check_output(argv)
    sigv   = {}
    n      = 0
    for line in sigstr.split('\n'):
        line = line.strip()
        line = line.replace(')', ' ')
        v = line.split()
        if 0 != (len(v) % 2):
            die("malformed output from 'kill -l'")

        for s, name in zip(v[::2], v[1::2]):
            num       = int(s)
            sigv[num] = name
            if num > n: n = num

    siga = [ "" ] * (1+n)
    for k, v in sigv.items(): siga[k] = v

    return sigv, siga



sigv, siga = readsigs()

defn  = "\n    , ".join([ '"%s"' % x for x in siga[1:] ])
uname = os.uname()
os    = uname[0]
arch  = uname[-1]
date  = datetime.datetime.now().utcnow()

# Now, print the struct
print """
/*
 * %sZ
 * Autogenerated by %s on %s-%s
 */

static const char * Signames[] = {
      "null-sig"
    , %s
};
#define N_SIGNAMES      (sizeof Signames/sizeof Signames[0])

#define signame(n)  ({ int i = (n);                   \\
        const char * s = "invalid-sig";               \\
        if (i > 0 && i < N_SIGNAMES) s = Signames[i]; \\
        s;})

/* EOF */
""" % (str(date), sys.argv[0], os, arch, defn)
